==============================================================================================|
-- sql_practise 1                                                                             |
create table personel                                                                         |
(                                                                                             |
id serial primary key  ,                                                                      |
isim varchar(20),                                                                             |
yas int,                                                                                      |
maas int,                                                                                     |
email varchar(30)                                                                             |
);                                                                                            |
																							  |
-- auto_increment kullandığımızda otomatik olarak id ler 1 den başlayacaktır.                 |

insert into personel (isim, yas, maas, email) values ('Ali', 39, 12500, 'ali@gmail.com');
insert into personel (isim, yas, maas, email) values ('Derya', 28, 15000, 'derya@yahoo.com');
insert into personel (isim, yas, maas, email) values ('Sevim', 24, 25000, 'sevim@hotmail.com');
insert into personel (isim, yas, maas, email) values ('Yusuf', 32, 18000, 'yusuf@gmail.com');
insert into personel (isim, yas, maas, email) values ('Halil', 48, 22000, 'halil@gmail.com');
insert into personel (isim, yas, maas, email) values ('Ece', 54, 21000, 'ece@gmail.com');
insert into personel (isim, yas, maas, email) values ('Can', 38, 19000, 'can@gmail.com');
insert into personel (isim, yas, maas, email) values ('Elif', 27, 14000, 'elif@gmail.com');
insert into personel (isim, yas, maas, email) values ('Ezgi', 38, 21000, 'ezgi@gmail.com');
insert into personel (isim, yas, maas, email) values ('Sena', 25, 11000, NULL);


-- 1) Tablo bilgilerini listeleyiniz.
select * from personel;

-- 2) isim, yaş ve maaş bilgilerini listeleyiniz
select isim , yas, maas from personel;

-- 3) id'si 8 olan personel bilgilerini listeleyiniz
select isim , yas, maas from personel where id = 8;

-- 4) id'si 5 olan personelin isim, yaş ve email bilgilerini listeleyiniz
select isim , yas, email from personel where id = 5;

-- 5) 30 yaşından büyük personel bilgilerini listeleyiniz.
select isim , yas from personel where yas > 30;

-- 6) maası 21000 olmayan personel bilgilerini listeleyiniz.
select * from personel where maas <> 21000; -- <> manasi != gelir

-- 7) ismi a harfi ile başlayan personel bilgilerini listeleyiniz.
select * from personel where isim like 'A%';

-- 8) ismi n harfi ile biten personel bilgilerini listeleyiniz.
select * from personel where isim ilike '%N';

-- 9) email adresi gmail olan personel bilgilerini listeleyiniz.
select * from personel where email like '%gmail.com';

-- 10) email adresi gmail olmayan personel bilgilerini listeleyiniz.
select * from personel where email not like '%gmail.com';

-- 11) id'si 3,5,7 ve 9 olan personel bilgilerini listeleyiniz.
select * from personel where id in(3,5,7,9);

-- 12) yaşı 39,48 ve 54 olmayan personel bilgilerini listeleyiniz.
select * from personel where yas not in(39,48,54);

-- 13) yaşı 30 ve 40 arasında olan personel bilgilerini listeleyiniz.
select * from personel where yas between 30 and 40;

-- 14) yaşı 30 ve 40 arasında olmyan personel bilgilerini listeleyiniz.
select * from personel where yas not between 30 and 40;

-- 15) emaili null olan personel bilgilerini listeleyiniz.
select * from personel where email is null; 

-- 16) personel bilgilerini yaşa göre sıralayınız.
select * from personel order by yas asc; -- kucukten buyuge
select * from personel order by yas desc; -- buyuktenb kucuge

-- 17) personel bilgilerini maaşa göre sıralayınız.
select * from personel order by maas asc;

-- 18) personelin yaşlarını büyükten küçüğe doğru sıralayınız.
select * from personel order by yas desc; -- buyuktenb kucuge

-- 20) personelin maaşlarını büyükten küçüğe doğru sıralayınız.
select * from personel order by maas desc;

-- 21) En yüksek maaş olan ilk 3 personel bilgilerini sıralayınız
select * from personel order by maas desc limit 3;


==============================================================================================

CREATE TABLE workers 
(  
  id int, 
  name varchar(20),
  title varchar(60),
  manager_id int 
);

INSERT INTO workers VALUES(1, 'Ali Can', 'Dev', 2);
INSERT INTO workers VALUES(2, 'John Davis', 'QA', 3);
INSERT INTO workers VALUES(3, 'Angie Star', 'Dev Lead', 4);
INSERT INTO workers VALUES(4, 'Amy Sky', 'CEO', 5);

select * from workers;


-- Tabloya company_industry isminde sütun ekleyiniz
alter table workers add company_industry varchar(20);



-- TABLOYA worker_address sütunu ve defaullt olarakta 'Miami, FL, USA' adresini ekleyiniz.
alter table workers add worker_address varchar(100) default 'Miami, FL, USA';
select * from workers;

    
-- tablodaki worker_address sütununu siliniz
alter table workers drop column worker_address;
select * from workers;


-- Tablodaki company_industry sütununu, company_profession olarak değiştiriniz.
alter table workers rename column company_industry to company_profession;
select * from workers;


-- Tablonun ismini employees olarak değişitiriniz.
alter table workers rename to employees ;
select * from employees;

-- Tablodaki title sütununa data tipini VARCHAR(50) olarak değiştiriniz.
ALTER TABLE employees ALTER COLUMN title TYPE varchar(50)  ;


-- Tablodaki title sütununa "UNIQUE" kıstlaması ekleyiniz.
alter table employees  ADD CONSTRAINT  title unique (title);


==============================================================================================

-- TABLOYA DATA EKLEME

CREATE TABLE students
(
    student_id CHAR(3) PRIMARY KEY,
    student_name VARCHAR(50) UNIQUE,
    student_age int NOT NULL,
    student_dob DATE,
    CONSTRAINT student_age_check CHECK(student_age BETWEEN 0 AND 20)
    
);


-- Tam veri girişi
INSERT INTO students VALUES(101, 'ALI CAN', 13, '021-08-11');
INSERT INTO students VALUES(102, 'VELI HAN', 14, '2007-08-10');
INSERT INTO students VALUES(103, 'AYSE TAN', 14, '2007-08-08');
INSERT INTO students VALUES(104, 'KEMAL KUZU', 15, null);
INSERT INTO students VALUES(105, 'TOM HANKS', 20, '2005-10-12');
INSERT INTO students VALUES(106, 'ANGELINA JULIE', 18, '1986-10-12');
INSERT INTO students VALUES(107, 'BRAD PITT', 0, '2021-08-10');

-- Parçalı veri girişi
INSERT INTO students(student_id, student_age) VALUES('108', 17);
INSERT INTO students(student_name, student_id, student_age) VALUES('JOHN DAVID', '109', 20);

select * from students;


-- 101 id öğrencinin ismini 'LEO OCEAN' olarak güncelleyinin
update students set student_name='leo ocean' where student_id='101';

-- 101 id öğrencinin yasini 22 olarak güncelleyinin
update students set student_age=21 where  student_id='101';--hata vercek kisitlama var

-- 101 id öğrencinin ismini 'ALI CAN' olarak güncelleyinin
update students set student_name='ALI CAN' where student_id='101';

-- 109 idli öğrencinin doğumtarihini 2010-12-11 olarak update yapın.
update students set student_dob='2010-12-11' where  student_id='109';

--ilk iki veriden sonra 5 veriyi listeleyiniz
select * from students limit 5 OFFSET 2

-- yasi en buyyuk 4. 5.  6. kişilerin bilgilerini listeleyiniz
select * from students order by student_age desc limit 3 offset 3;
select * from students;




--  ============================= SUBQUERIES ====================================
--  SORGU içinde çalişan SORGUYA SUBQUERY (ALT SORGU) denilir.

use batch60_61;

CREATE TABLE calisanlar 
(
id int, 
isim VARCHAR(50), 
sehir VARCHAR(50), 
maas int, 
isyeri VARCHAR(20)
);

INSERT INTO calisanlar VALUES(123456789, 'Ali Seker', 'Istanbul', 2500, 'Vakko');
INSERT INTO calisanlar VALUES(234567890, 'Ayse Gul', 'Istanbul', 1500, 'LCWaikiki');
INSERT INTO calisanlar VALUES(345678901, 'Veli Yilmaz', 'Ankara', 3000, 'Vakko');
INSERT INTO calisanlar VALUES(456789012, 'Veli Yilmaz', 'Izmir', 1000, 'Pierre Cardin');
INSERT INTO calisanlar VALUES(567890123, 'Veli Yilmaz', 'Ankara', 7000, 'Adidas');
INSERT INTO calisanlar VALUES(456789012, 'Ayse Gul', 'Ankara', 1500, 'Pierre Cardin');
INSERT INTO calisanlar VALUES(123456710, 'Fatma Yasa', 'Bursa', 2500, 'Vakko');
    
CREATE TABLE markalar
(
marka_id int, 
marka_isim VARCHAR(20), 
calisan_sayisi int
);
    
INSERT INTO markalar VALUES(100, 'Vakko', 12000);
INSERT INTO markalar VALUES(101, 'Pierre Cardin', 18000);
INSERT INTO markalar VALUES(102, 'Adidas', 10000);
INSERT INTO markalar VALUES(103, 'LCWaikiki', 21000);
    
select * from calisanlar;
select * from markalar;
    

-- SORU1: calisan sayisi 15.000’den cok olan markalarin isimlerini ve bu markada calisanlarin isimlerini ve maaşlarini listeleyin.
select isim, maas, isyeri from calisanlar where 
isyeri in (select marka_isim from markalar where calisan_sayisi>15000);
-- Yukardaki sorgu aslnda aşağdaki 2 sorgunun birleştirilmiş halidier.
-- select marka_isim from markalar where calisan_sayisi>15000;
-- select isim, maas, isyeri from calisanlar where isyeri in (‘LCWaikiki’, ‘Pierre Cardin’);
                   
-- SORU2: marka_id’si 101’den büyük olan marka çalişanlarinin isim, maaş ve şehirlerini listeleyiniz. 
select isim, maas, sehir,isyeri from calisanlar 
where isyeri in (select marka_isim from markalar where marka_id>101);
-- Yukardaki sorgu aslnda aşağdaki 2 sorgunun birleştirilmiş halidir.
-- ‘Adidas’, ‘LCWaikiki’ --->  select marka_isim from markalar where marka_id > 101;
-- select isim, maas, sehir from calisanlar where isyeri in (‘Adidas’, ‘LCWaikiki’);

-- SORU3: Ankara’da calisani olan markalarin marka id'lerini ve calisan sayilarini listeleyiniz.
select marka_id, calisan_sayisi from markalar 
where marka_isim in (select isyeri from calisanlar where sehir='Ankara');
-- Yukardaki sorgu aslnda aşağdaki 2 sorgunun birleştirilmiş halidir.
-- select isyeri from calisanlar where sehir = ‘Ankara’;
-- select marka_id, calisan_sayisi from markalar where marka_isim in (‘Vakko’, ‘Adidas’, ‘Pierre Cardin’);
  
/* ===================== AGGREGATE METOT KULLANIMI ===========================
    Aggregate Metotlari(SUM,COUNT, MIN,MAX, AVG) Subquery içinde kullanilabilir.
    Ancak, Sorgu tek bir değer döndürüyor olmalidir.
    SYNTAX: sum() şeklinde olmalı sum ile () arasında boşluk olmammalı
==============================================================================*/   
      
-- SORU4: Her markanin ismini, calisan sayisini ve o markaya ait calisanlarin toplam maaşini listeleyen bir Sorgu yaziniz.
select marka_isim, calisan_sayisi , 
(select sum(maas) from calisanlar
 where marka_isim = isyeri ) as toplam_maas from markalar;
 
 select * from calisanlar;
select * from markalar;
-- SORU5: Her markanin ismini, calisan sayisini ve o markaya ait calisanlarin ortalama maaşini listeleyen bir Sorgu yaziniz.
select marka_isim, calisan_sayisi  , 
(select round(avg(maas)) from calisanlar
 where marka_isim = isyeri ) as ort_maas from markalar;
-- round() yuvarlar
select marka_isim, calisan_sayisi  , 
(select round(avg(maas),2) from calisanlar 
 where marka_isim = isyeri ) as ort_maas from markalar;

-- SORU6: Her markanin ismini, calisan sayisini ve o markaya ait calisanlarin maksimum ve minumum maaşini listeleyen bir Sorgu yaziniz.
select marka_isim, calisan_sayisi  , 
(select round(max(maas)) from calisanlar where marka_isim = isyeri ) max_maas,
(select min(maas) from calisanlar where marka_isim = isyeri )as min_maas 
from markalar;

-- SORU7: Her markanin id’sini, ismini ve toplam kaç şehirde bulunduğunu listeleyen bir SORGU yaziniz.
 select marka_id, marka_isim    , 
 (select count(sehir) from calisanlar
  where marka_isim = isyeri ) as top_il from markalar;



============================================================
interview questions 
CREATE TABLE personel6
(
id int, 
isim varchar(50), 
sehir varchar(50), 
maas int, 
sirket varchar(20)
);

INSERT INTO personel6 VALUES(123456789, 'Johnny Walk', 'New Hampshire', 2500, 'IBM');
INSERT INTO personel6 VALUES(234567891, 'Brian Pitt', 'Florida', 1500, 'LINUX');
INSERT INTO personel6 VALUES(245678901, 'Eddie Murphy', 'Texas', 3000, 'WELLS FARGO');
INSERT INTO personel6 VALUES(456789012, 'Teddy Murphy', 'Virginia', 1000, 'GOOGLE');  
INSERT INTO personel6 VALUES(567890124, 'Eddie Murphy', 'Massachuset', 7000, 'MICROSOFT');
INSERT INTO personel6 VALUES(456789012, 'Brad Pitt', 'Texas', 1500, 'TD BANK');
INSERT INTO personel6 VALUES(123456719, 'Adem Stone', 'New Jersey', 2500, 'IBM');

SELECT *
FROM personel6;

CREATE TABLE isciler 
(
id int,
isim varchar(50), 
sehir varchar(50), 
maas int, 
sirket varchar(20)
);

INSERT INTO isciler VALUES(123456789, 'John Walker', 'Florida', 2500, 'IBM');
INSERT INTO isciler VALUES(234567890, 'Brad Pitt', 'Florida', 1500, 'APPLE');
INSERT INTO isciler VALUES(345678901, 'Eddie Murphy', 'Texas', 3000, 'IBM');
INSERT INTO isciler VALUES(456789012, 'Eddie Murphy', 'Virginia', 1000, 'GOOGLE');
INSERT INTO isciler VALUES(567890123, 'Eddie Murphy', 'Texas', 7000, 'MICROSOFT');
INSERT INTO isciler VALUES(456789012, 'Brad Pitt', 'Texas', 1500, 'GOOGLE');
INSERT INTO isciler VALUES(123456710, 'Mark Stone', 'texas', 2500, 'IBM');


SELECT *
FROM isciler;

-- 1) Her iki tablodaki ortak id’leri ve 
--     personel6 tablosunda bu id’ye sahip isimleri
-- isme gore sirali olarak listeleyen query yaziniz

SELECT isim,id
FROM  personel6
WHERE  EXISTS (SELECT id
                        FROM isciler
                        WHERE isciler.id = personel6.id)
ORDER BY isim; 


-- ) Personel6 tablosunda kac tane kayit oldugunu gosteren query yazin

SELECT COUNT(*)
FROM personel6;

-- Isciler tablosunda en yuksek maasi alan kisinin tum bilgilerini gosteren query yazin

SELECT *
FROM isciler
WHERE maas=(SELECT MAX(maas)
                            FROM isciler);

-- 8) Isciler tablosunda ikinci en yuksek maasi maasi gosteren query yazin

SELECT MAX(maas)
FROM isciler
WHERE maas<>(SELECT MAX(maas)
                            FROM isciler);
							
							
 --Isciler tablosunda ikinci en yuksek maasi alan kisinin tum bilgilerini listeleyen sorgu yaziniz


SELECT *
FROM isciler 
WHERE maas=(SELECT MAX(maas)
                        FROM isciler
                        WHERE maas<>(SELECT MAX(maas)
                                                     FROM isciler););						
							
							
							
							
							
